#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
member=0
#is_public=0

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=2

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
#ynh_app_setting_set --app=$app --key=is_public --value=$is_public
ynh_app_setting_set --app=$app --key=member --value=$member
ynh_app_setting_set --app=$app --key=version --value=$(ynh_app_upstream_version "../manifest.json")

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=2

# Create a system user
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..." --weight=1

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

ynh_mysql_execute_as_root --sql="ALTER DATABASE $db_name charset=utf8"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path

# Download, check integrity, uncompress and patch the source from app.src
ynh_script_progression --message="Download source files..." --weight=70
ynh_setup_source --dest_dir="$final_path"

# Create necessary files
datadir=$final_path/documents
touch $final_path/htdocs/conf/conf.php

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring PHP-FPM and install dependencies..." --weight=2

# Create a dedicated php-fpm config
ynh_add_fpm_config --usage=medium --footprint=medium --package="$extra_php_dependencies"
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# PREPARE AND INSTALL APP
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="../conf/install.forced.php" --destination="$final_path/htdocs/install/install.forced.php"

#=================================================
# CONFIGURE THE HOOK FILE FOR USER CREATE
#=================================================
fhook=../hooks/post_user_create
ynh_replace_string --match_string="__APP__" --replace_string="$app" --target_file="$fhook"
ynh_replace_string --match_string="__MEMBER__" --replace_string="$member" --target_file="$fhook"
ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path" --target_file="$fhook"

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================

# Set right permissions for curl install
chown -R $app: "$final_path"

# Set the app as temporarily public for curl call
ynh_script_progression --message="Configuring permissions..." --weight=1
# Set the app as temporarily public for cURL call
ynh_permission_update --permission="main" --add="visitors"

# Reload NGINX
ynh_systemd_action --service_name=nginx --action=reload

# Installation with curl

mkdir -p /var/log/$app/

ynh_script_progression --message="Finalizing installation..." --weight=1

ynh_script_progression --message="Generate fileconf" --weight=1
ynh_local_curl "/install/fileconf.php" \
		"testpost=ok"
	
ynh_script_progression --message="installation - step 1" --weight=3
ynh_local_curl "/install/step1.php" \
		"testpost=ok" \
		"action=set" > /var/log/$app/install1.html
		
ynh_script_progression --message="installation - step 2 (may take a while)..." --weight=72
ynh_local_curl "/install/step2.php" \
		"testpost=ok" \
		"action=set" > /var/log/$app/install2.html

ynh_script_progression --message="installation - step 4" --weight=3
ynh_local_curl "/install/step4.php" \
		"testpost=ok" \
		"action=set" > /var/log/$app/install3.html
		
# Generate a random password for the admin user (will be ignored because of LDAP)
password=$(ynh_string_random 8)

ynh_script_progression --message="installation - step 5" --weight=4
ynh_local_curl "/install/step5.php" \
		"testpost=ok" \
		"action=set" \
		"pass=$password" \
		"pass_verif=$password" > /var/log/$app/install4.html

ynh_script_progression --message="configuring LDAP" --weight=1

# Populate the LDAP parameters
ynh_mysql_connect_as --user=$db_name --password=$db_pwd --database=$db_name < ../conf/sql/ldap.sql

# Populate the database with YNH users.
ynh_mysql_connect_as --user=$db_name --password=$db_pwd --database=$db_name < ../conf/sql/ldap_user.sql

if php $final_path/scripts/user/sync_users_ldap2dolibarr.php commitiferror --server=localhost -y; then
        ynh_print_info --message="LDAP user update ok"
else
        ynh_print_warn --message="LDAP user update ended with error"
fi

# Remove the public access
ynh_permission_update --permission="main" --remove="visitors"

#=================================================
# MODIFY A CONFIG FILE
#=================================================

# Setup HTTP auth in conf
ynh_script_progression --message="configuring config file" --weight=1
ynh_replace_string --match_string="dolibarr_main_authentication='dolibarr'" --replace_string="dolibarr_main_authentication='http'" --target_file="$final_path/htdocs/conf/conf.php"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$final_path/htdocs/conf/conf.php"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions on app files
chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

chmod 644 "$final_path/htdocs/conf/conf.php"
mkdir -p "$datadir"
chown -R $app: "$datadir"
chmod go-w $datadir

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate --logfile="$final_path/documents/dolibarr.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..." --weight=1

# Create the public space permission if needed
if ! ynh_permission_exists --permission "public_space"; then
	ynh_permission_create --permission "public_space" --url "/public/" --allowed "visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
